<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-25T19:16:07 IST" name="Suite" finished-at="2024-05-25T19:17:22 IST" duration-ms="75130">
    <groups>
    </groups>
    <test started-at="2024-05-25T19:16:07 IST" name="Test" finished-at="2024-05-25T19:17:22 IST" duration-ms="75130">
      <class name="tests.Login">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:tests.Login@7c7b252e]" started-at="2024-05-25T19:16:07 IST" name="setup" finished-at="2024-05-25T19:16:17 IST" duration-ms="9438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://tutorialsninja.com/demo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials()[pri:1, instance:tests.Login@7c7b252e]" started-at="2024-05-25T19:16:17 IST" name="loginWithValidCredentials" finished-at="2024-05-25T19:16:17 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@7c7b252e]" started-at="2024-05-25T19:16:17 IST" name="tearDown" finished-at="2024-05-25T19:16:18 IST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:tests.Login@7c7b252e]" started-at="2024-05-25T19:16:18 IST" name="setup" finished-at="2024-05-25T19:16:28 IST" duration-ms="9845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://tutorialsninja.com/demo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithInvalidCredentials()[pri:2, instance:tests.Login@7c7b252e]" started-at="2024-05-25T19:16:28 IST" name="loginWithInvalidCredentials" finished-at="2024-05-25T19:16:28 IST" duration-ms="45" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.Login.loginWithInvalidCredentials(Login.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@7c7b252e]" started-at="2024-05-25T19:16:28 IST" name="tearDown" finished-at="2024-05-25T19:16:28 IST" duration-ms="620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:tests.Login@7c7b252e]" started-at="2024-05-25T19:16:28 IST" name="setup" finished-at="2024-05-25T19:16:35 IST" duration-ms="6949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://tutorialsninja.com/demo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidEmailAndInvalidPassword()[pri:3, instance:tests.Login@7c7b252e]" started-at="2024-05-25T19:16:35 IST" name="loginWithValidEmailAndInvalidPassword" finished-at="2024-05-25T19:16:35 IST" duration-ms="6" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Test skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Test skipped
at tests.Login.loginWithValidEmailAndInvalidPassword(Login.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidEmailAndInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@7c7b252e]" started-at="2024-05-25T19:16:35 IST" name="tearDown" finished-at="2024-05-25T19:16:36 IST" duration-ms="445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Login -->
      <class name="tests.Register">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:tests.Register@702657cc]" started-at="2024-05-25T19:17:07 IST" name="setup" finished-at="2024-05-25T19:17:14 IST" duration-ms="7235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://tutorialsninja.com/demo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithMandatoryFields()[pri:1, instance:tests.Register@702657cc]" started-at="2024-05-25T19:17:14 IST" name="registerWithMandatoryFields" finished-at="2024-05-25T19:17:14 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Register@702657cc]" started-at="2024-05-25T19:17:14 IST" name="tearDown" finished-at="2024-05-25T19:17:15 IST" duration-ms="600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:tests.Register@702657cc]" started-at="2024-05-25T19:17:15 IST" name="setup" finished-at="2024-05-25T19:17:21 IST" duration-ms="6896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://tutorialsninja.com/demo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerWithAllFields()[pri:2, instance:tests.Register@702657cc]" started-at="2024-05-25T19:17:21 IST" name="registerWithAllFields" finished-at="2024-05-25T19:17:21 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Register@702657cc]" started-at="2024-05-25T19:17:22 IST" name="tearDown" finished-at="2024-05-25T19:17:22 IST" duration-ms="742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Register -->
      <class name="tests.LoginFile">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginFile@43bc63a3]" started-at="2024-05-25T19:16:36 IST" name="setup" finished-at="2024-05-25T19:16:42 IST" duration-ms="6586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginFile@43bc63a3]" started-at="2024-05-25T19:16:42 IST" name="loginWithValidCredentials" data-provider="dpLogin" finished-at="2024-05-25T19:16:45 IST" duration-ms="2442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amotooricap1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginFile@43bc63a3]" started-at="2024-05-25T19:16:45 IST" name="tearDown" finished-at="2024-05-25T19:16:45 IST" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginFile@43bc63a3]" started-at="2024-05-25T19:16:45 IST" name="setup" finished-at="2024-05-25T19:16:53 IST" duration-ms="8257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginFile@43bc63a3]" started-at="2024-05-25T19:16:53 IST" name="loginWithValidCredentials" data-provider="dpLogin" finished-at="2024-05-25T19:16:56 IST" duration-ms="2140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amotooricap2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginFile@43bc63a3]" started-at="2024-05-25T19:16:56 IST" name="tearDown" finished-at="2024-05-25T19:16:56 IST" duration-ms="591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginFile@43bc63a3]" started-at="2024-05-25T19:16:56 IST" name="setup" finished-at="2024-05-25T19:17:04 IST" duration-ms="8198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginFile@43bc63a3]" started-at="2024-05-25T19:17:04 IST" name="loginWithValidCredentials" data-provider="dpLogin" finished-at="2024-05-25T19:17:06 IST" duration-ms="1832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amotooricap3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginFile@43bc63a3]" started-at="2024-05-25T19:17:06 IST" name="tearDown" finished-at="2024-05-25T19:17:07 IST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginFile -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
